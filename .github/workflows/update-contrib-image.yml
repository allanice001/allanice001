name: Update contribution image in README

on:
  schedule:
    - cron: "13 6 * * *"   # daily at 06:13 UTC â€” tweak as you like
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Determine username and build candidate URLs
        id: prep
        run: |
          OWNER="${{ github.repository_owner }}"

          # Timestamp to bust caches in README
          TS="$(date -u +%Y%m%d%H%M%S)"

          # Common public endpoints used by the generator (we'll probe them):
          candidates=(
            "https://github-contributions.vercel.app/${OWNER}.svg"
            "https://github-contributions.vercel.app/api?username=${OWNER}&format=svg"
            "https://github-contributions.vercel.app/api/v1/${OWNER}.svg"
            "https://github-contributions.vercel.app/api/v1/${OWNER}?format=svg"
          )

          IMG_URL=""
          for u in "${candidates[@]}"; do
            if curl -sIfL "$u" >/dev/null 2>&1; then
              IMG_URL="${u}"
              break
            fi
          done

          if [ -z "$IMG_URL" ]; then
            echo "Could not find a working endpoint from github-contributions.vercel.app" >&2
            exit 1
          fi

          # Add cache-busting query param (preserve existing params)
          if [[ "$IMG_URL" == *\?* ]]; then
            IMG_URL="${IMG_URL}&timestamp=${TS}"
          else
            IMG_URL="${IMG_URL}?timestamp=${TS}"
          fi

          echo "IMG_URL=$IMG_URL" >> $GITHUB_ENV
          echo "OWNER=$OWNER" >> $GITHUB_ENV

      - name: Update README section
        run: |
          START="<!--START_SECTION:contrib-image-->"
          END="<!--END_SECTION:contrib-image-->"
          NEW_CONTENT="${START}\n[![${OWNER}'s contribution graph](${IMG_URL})](${IMG_URL})\n${END}"

          if [ ! -f README.md ]; then
            echo "README.md not found in repository root." >&2
            exit 1
          fi

          # Replace content between markers (or insert if missing)
          if grep -q "$START" README.md && grep -q "$END" README.md; then
            awk -v start="$START" -v end="$END" -v repl="$NEW_CONTENT" '
              BEGIN{found=0}
              {
                if ($0 ~ start) {print repl; found=1; skip=1}
                else if ($0 ~ end) {skip=0; next}
                else if (skip!=1) {print}
              }
              END{ if(found==0) { print ""; print repl } }
            ' README.md > README.md.new
            mv README.md.new README.md
          else
            printf "\n%s\n" "$NEW_CONTENT" >> README.md
          fi

      - name: Commit changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add README.md
            git commit -m "chore: update contributions image"
            git push
          else
            echo "No changes to commit."
          fi
